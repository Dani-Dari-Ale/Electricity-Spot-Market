<!DOCTYPE html>
<html class="fa-events-icons-ready" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style>
    .utterances {
      position: relative;
      box-sizing: border-box;
      width: 100%;
      max-width: 760px;
      margin-left: auto;
      margin-right: auto;
    }
    .utterances-frame {
      color-scheme: light;
      position: absolute;
      left: 0;
      right: 0;
      width: 1px;
      min-width: 100%;
      max-width: 100%;
      height: 100%;
      border: 0;
    }
  </style><style type="text/css" class="lum-base-styles">
@keyframes lum-noop {
  0% { zoom: 1; }
}

.lum-lightbox {
  position: fixed;
  display: none;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.lum-lightbox.lum-open {
  display: block;
}

.lum-lightbox.lum-opening, .lum-lightbox.lum-closing {
  animation: lum-noop 1ms;
}

.lum-lightbox-inner {
  position: absolute;
  top: 0%;
  right: 0%;
  bottom: 0%;
  left: 0%;

  overflow: hidden;
}

.lum-lightbox-loader {
  display: none;
}

.lum-lightbox-inner img {
  max-width: 100%;
  max-height: 100%;
}

.lum-lightbox-image-wrapper {
  vertical-align: middle;
  display: table-cell;
  text-align: center;
}
</style>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <title>Create one executable file for a Flask app with PyInstaller 	| Ezequiel Leonardo Castaño Personal Website</title>

    <!-- Meta -->
    <meta name="name" content="Ezequiel Leonardo Castaño Personal Website">
    <meta name="description" content="Ezequiel Leonardo Castaño Personal Website - In this website you will find post about christianity, programming and math">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

<meta name="image" content="https://elc.github.io/blog/images/flask_pyinstaller/flask-pyinstaller_headerimage.png">    

    <!-- Google Verification -->
    <meta name="google-site-verification" content="UKZ1mYz9vI6xkYtBnIQL-cjCusUxX-2fKT7wdtJEdZU">

    <!-- Social -->
      <meta property="article:author" content="Ezequiel Leonardo Castaño">
      <meta property="article:section" content="Programming">
      <meta property="article:published_time" content="2018-02-24">

      <meta property="og:type" content="article">
      <meta property="og:title" content="Create one executable file for a Flask app with PyInstaller">
      <meta property="og:description" content="Having a single executable file could be a great advantage in so many cases and nowadays more a more desktop applications are using web technologies (React Native, Cordova, Ionic, etc.). It was time for the Python stack to join the Group via PyFlaDesk, a simple script to combine Flask, Qt and PyInstaller to create desktop Apps.">
      <meta property="og:site_name" content="Ezequiel Leonardo Castaño Personal Website">
      <meta property="og:url" content="https://elc.github.io/posts/executable-flask-pyinstaller/">
      <meta property="og:image" content="https://elc.github.io/blog/images/flask_pyinstaller/flask-pyinstaller_headerimage.png">

      <meta name="twitter:card" content="summary">
      <meta name="twitter:title" content="Create one executable file for a Flask app with PyInstaller">
      <meta name="twitter:description" content="Having a single executable file could be a great advantage in so many cases and nowadays more a more desktop applications are using web technologies (React Native, Cordova, Ionic, etc.). It was time for the Python stack to join the Group via PyFlaDesk, a simple script to combine Flask, Qt and PyInstaller to create desktop Apps.">
      <meta name="twitter:url" content="https://elc.github.io/posts/executable-flask-pyinstaller/">
      <meta name="twitter:image" content="https://elc.github.io/blog/images/flask_pyinstaller/flask-pyinstaller_headerimage.png">
    

    <!-- Feed -->
      <link rel="alternate" type="application/atom+xml" href="http://feeds.feedburner.com/ELCWEB" title="Ezequiel Leonardo Castaño Personal Website Atom Feed">
      <link rel="alternate" type="application/atom+xml" href="http://feeds.feedburner.com/feeds/all.atom.xml" title="Ezequiel Leonardo Castaño Personal Website Atom Feed">

    <!-- Comments -->

      <link rel="alternate" type="application/rss+xml" href="http://elcgweb.disqus.com/latest.rss" title="Ezequiel Leonardo Castaño Personal Website Comments RSS Feed">

    <!-- CSS -->
    <link rel="stylesheet" type="text/css" href="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/style.css">

    <!-- Fonts -->
    <script src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/6af5d1a69f.js" async=""></script>

    <!-- Localization -->
    <link rel="prefetch" type="application/l10n" href="https://elc.github.io/localization.ini">

    <!-- FAVICON -->
    <link rel="apple-touch-icon" sizes="180x180" href="https://elc.github.io/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="https://elc.github.io/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="https://elc.github.io/favicon-16x16.png">
    <link rel="manifest" href="https://elc.github.io/site.webmanifest">
    <link rel="mask-icon" href="https://elc.github.io/safari-pinned-tab.svg" color="#000000">
    <meta name="msapplication-TileColor" content="#000000">
    <meta name="theme-color" content="#ffffff">

    
  <style>[data-ea-publisher].loaded,[data-ea-type].loaded{font-size:14px;font-family:-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;font-weight:normal;font-style:normal;leter-spacing:0px;vertical-align:baseline;line-height:1.3em}[data-ea-publisher].loaded a,[data-ea-type].loaded a{text-decoration:none}[data-ea-publisher].loaded .ea-pixel,[data-ea-type].loaded .ea-pixel{display:none}[data-ea-publisher].loaded .ea-content,[data-ea-type].loaded .ea-content{margin:1em 1em 0.5em 1em;padding:1em;background:rgba(0,0,0,0.03);color:#505050}[data-ea-publisher].loaded .ea-content a:link,[data-ea-type].loaded .ea-content a:link{color:#505050}[data-ea-publisher].loaded .ea-content a:visited,[data-ea-type].loaded .ea-content a:visited{color:#505050}[data-ea-publisher].loaded .ea-content a:hover,[data-ea-type].loaded .ea-content a:hover{color:#373737}[data-ea-publisher].loaded .ea-content a:active,[data-ea-type].loaded .ea-content a:active{color:#373737}[data-ea-publisher].loaded .ea-content a strong,[data-ea-publisher].loaded .ea-content a b,[data-ea-type].loaded .ea-content a strong,[data-ea-type].loaded .ea-content a b{color:#088cdb}[data-ea-publisher].loaded .ea-callout a:link,[data-ea-type].loaded .ea-callout a:link{color:#6a6a6a}[data-ea-publisher].loaded .ea-callout a:visited,[data-ea-type].loaded .ea-callout a:visited{color:#6a6a6a}[data-ea-publisher].loaded .ea-callout a:hover,[data-ea-type].loaded .ea-callout a:hover{color:#505050}[data-ea-publisher].loaded .ea-callout a:active,[data-ea-type].loaded .ea-callout a:active{color:#505050}[data-ea-publisher].loaded .ea-callout a strong,[data-ea-publisher].loaded .ea-callout a b,[data-ea-type].loaded .ea-callout a strong,[data-ea-type].loaded .ea-callout a b{color:#088cdb}[data-ea-publisher].loaded .ea-callout a,[data-ea-type].loaded .ea-callout a{font-size:0.8em}[data-ea-publisher].loaded.dark .ea-content,[data-ea-type].loaded.dark .ea-content{background:rgba(255,255,255,0.05);color:#dcdcdc}[data-ea-publisher].loaded.dark .ea-content a:link,[data-ea-type].loaded.dark .ea-content a:link{color:#dcdcdc}[data-ea-publisher].loaded.dark .ea-content a:visited,[data-ea-type].loaded.dark .ea-content a:visited{color:#dcdcdc}[data-ea-publisher].loaded.dark .ea-content a:hover,[data-ea-type].loaded.dark .ea-content a:hover{color:#f6f6f6}[data-ea-publisher].loaded.dark .ea-content a:active,[data-ea-type].loaded.dark .ea-content a:active{color:#f6f6f6}[data-ea-publisher].loaded.dark .ea-content a strong,[data-ea-publisher].loaded.dark .ea-content a b,[data-ea-type].loaded.dark .ea-content a strong,[data-ea-type].loaded.dark .ea-content a b{color:#50baf9}[data-ea-publisher].loaded.dark .ea-callout a:link,[data-ea-type].loaded.dark .ea-callout a:link{color:#c3c3c3}[data-ea-publisher].loaded.dark .ea-callout a:visited,[data-ea-type].loaded.dark .ea-callout a:visited{color:#c3c3c3}[data-ea-publisher].loaded.dark .ea-callout a:hover,[data-ea-type].loaded.dark .ea-callout a:hover{color:#dcdcdc}[data-ea-publisher].loaded.dark .ea-callout a:active,[data-ea-type].loaded.dark .ea-callout a:active{color:#dcdcdc}[data-ea-publisher].loaded.dark .ea-callout a strong,[data-ea-publisher].loaded.dark .ea-callout a b,[data-ea-type].loaded.dark .ea-callout a strong,[data-ea-type].loaded.dark .ea-callout a b{color:#50baf9}@media (prefers-color-scheme: dark){[data-ea-publisher].loaded.adaptive .ea-content,[data-ea-type].loaded.adaptive .ea-content{background:rgba(255,255,255,0.05);color:#dcdcdc}[data-ea-publisher].loaded.adaptive .ea-content a:link,[data-ea-type].loaded.adaptive .ea-content a:link{color:#dcdcdc}[data-ea-publisher].loaded.adaptive .ea-content a:visited,[data-ea-type].loaded.adaptive .ea-content a:visited{color:#dcdcdc}[data-ea-publisher].loaded.adaptive .ea-content a:hover,[data-ea-type].loaded.adaptive .ea-content a:hover{color:#f6f6f6}[data-ea-publisher].loaded.adaptive .ea-content a:active,[data-ea-type].loaded.adaptive .ea-content a:active{color:#f6f6f6}[data-ea-publisher].loaded.adaptive .ea-content a strong,[data-ea-publisher].loaded.adaptive .ea-content a b,[data-ea-type].loaded.adaptive .ea-content a strong,[data-ea-type].loaded.adaptive .ea-content a b{color:#50baf9}[data-ea-publisher].loaded.adaptive .ea-callout a:link,[data-ea-type].loaded.adaptive .ea-callout a:link{color:#c3c3c3}[data-ea-publisher].loaded.adaptive .ea-callout a:visited,[data-ea-type].loaded.adaptive .ea-callout a:visited{color:#c3c3c3}[data-ea-publisher].loaded.adaptive .ea-callout a:hover,[data-ea-type].loaded.adaptive .ea-callout a:hover{color:#dcdcdc}[data-ea-publisher].loaded.adaptive .ea-callout a:active,[data-ea-type].loaded.adaptive .ea-callout a:active{color:#dcdcdc}[data-ea-publisher].loaded.adaptive .ea-callout a strong,[data-ea-publisher].loaded.adaptive .ea-callout a b,[data-ea-type].loaded.adaptive .ea-callout a strong,[data-ea-type].loaded.adaptive .ea-callout a b{color:#50baf9}}[data-ea-publisher].loaded .ea-content,[data-ea-type].loaded .ea-content{border:0px;border-radius:3px;box-shadow:0px 2px 3px rgba(0,0,0,0.15)}[data-ea-publisher].loaded.raised .ea-content,[data-ea-type].loaded.raised .ea-content{border:0px;border-radius:3px;box-shadow:0px 2px 3px rgba(0,0,0,0.15)}[data-ea-publisher].loaded.bordered .ea-content,[data-ea-type].loaded.bordered .ea-content{border:1px solid rgba(0,0,0,0.04);border-radius:3px;box-shadow:none}[data-ea-publisher].loaded.bordered.dark .ea-content,[data-ea-type].loaded.bordered.dark .ea-content{border:1px solid rgba(255,255,255,0.07)}@media (prefers-color-scheme: dark){[data-ea-publisher].loaded.bordered.adaptive .ea-content,[data-ea-type].loaded.bordered.adaptive .ea-content{border:1px solid rgba(255,255,255,0.07)}}[data-ea-publisher].loaded.flat .ea-content,[data-ea-type].loaded.flat .ea-content{border:0px;border-radius:3px;box-shadow:none}[data-ea-type="image"].loaded,[data-ea-publisher]:not([data-ea-type]).loaded,.ea-type-image{display:inline-block}[data-ea-type="image"].loaded .ea-content,[data-ea-publisher]:not([data-ea-type]).loaded .ea-content,.ea-type-image .ea-content{max-width:180px;overflow:auto;text-align:center}[data-ea-type="image"].loaded .ea-content>a>img,[data-ea-publisher]:not([data-ea-type]).loaded .ea-content>a>img,.ea-type-image .ea-content>a>img{width:120px;height:90px;display:inline-block}[data-ea-type="image"].loaded .ea-content>.ea-text,[data-ea-publisher]:not([data-ea-type]).loaded .ea-content>.ea-text,.ea-type-image .ea-content>.ea-text{margin-top:1em;font-size:1em;text-align:center}[data-ea-type="image"].loaded .ea-callout,[data-ea-publisher]:not([data-ea-type]).loaded .ea-callout,.ea-type-image .ea-callout{max-width:180px;margin:0em 1em 1em 1em;padding-left:1em;padding-right:1em;font-style:italic;text-align:right}[data-ea-type="image"].loaded.horizontal .ea-content,[data-ea-publisher]:not([data-ea-type]).loaded.horizontal .ea-content,.ea-type-image.horizontal .ea-content{max-width:320px}[data-ea-type="image"].loaded.horizontal .ea-content>a>img,[data-ea-publisher]:not([data-ea-type]).loaded.horizontal .ea-content>a>img,.ea-type-image.horizontal .ea-content>a>img{float:left;margin-right:1em}[data-ea-type="image"].loaded.horizontal .ea-content .ea-text,[data-ea-publisher]:not([data-ea-type]).loaded.horizontal .ea-content .ea-text,.ea-type-image.horizontal .ea-content .ea-text{margin-top:0em;text-align:left;overflow:auto}[data-ea-type="image"].loaded.horizontal .ea-callout,[data-ea-publisher]:not([data-ea-type]).loaded.horizontal .ea-callout,.ea-type-image.horizontal .ea-callout{max-width:320px;text-align:right}[data-ea-type="text"].loaded,.ea-type-text{font-size:14px}[data-ea-type="text"].loaded .ea-content,.ea-type-text .ea-content{text-align:left}[data-ea-type="text"].loaded .ea-callout,.ea-type-text .ea-callout{margin:0.5em 1em 1em 1em;padding-left:1em;padding-right:1em;text-align:right;font-style:italic}[data-ea-style="stickybox"].loaded .ea-type-image{z-index:1000;position:fixed;bottom:20px;right:20px}[data-ea-style="stickybox"].loaded .ea-type-image .ea-stickybox-hide{cursor:pointer;position:absolute;top:0.75em;right:0.75em;background-color:#fefefe;border:1px solid #088cdb;border-radius:50%;color:#088cdb;font-size:1em;text-align:center;height:1.5em;width:1.5em;line-height:1.5em}@media (max-width: 1300px){[data-ea-style="stickybox"].loaded .ea-type-image{position:static;bottom:0;right:0;margin:auto;text-align:center}[data-ea-style="stickybox"].loaded .ea-type-image .ea-stickybox-hide{display:none}}@media (min-width: 1301px){[data-ea-style="stickybox"].loaded .ea-type-image .ea-content{background:#dcdcdc}[data-ea-style="stickybox"].loaded.dark .ea-type-image .ea-content{background:#505050}}@media (min-width: 1301px) and (prefers-color-scheme: dark){[data-ea-style="stickybox"].loaded.adaptive .ea-type-image .ea-content{background:#505050}}
</style><script src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/a" type="text/javascript" async=""></script></head>

  <body>

    <a id="topbar"></a>

<nav class="nav-bar">
    <h1><a href="https://elc.github.io/" class="logo" title="Home">EL</a></h1>
    <input class="nav-menu-btn" type="checkbox" id="nav-menu-btn">
    <label class="nav-menu-icon" for="nav-menu-btn"><span class="nav-icon"></span></label>
    <ul class="nav-menu">
        <li class="nav-menu__entry"><a href="https://elc.github.io/">Home</a></li>
                <li class="nav-menu__entry"><a href="https://elc.github.io/about/" data-l10n-id="about">Sobre mí</a></li>
                <li class="nav-menu__entry"><a href="https://elc.github.io/projects/" data-l10n-id="portfolio">Portfolio</a></li>
                <li class="nav-menu__entry"><a href="https://elc.github.io/publications.html" data-l10n-id="publications">Publicaciones</a></li>
    </ul>
</nav>
<div class="nav-separator"></div>
  
    <aside class="ethical">
    <div class="ethical-text">
      <div data-ea-keywords="Python|Flask|PyInstaller" data-ea-publisher="elcgithubio" data-ea-type="text" id="text--" class="loaded"><div class="ea-placement ea-type-text"><div class="ea-content"><div class="ea-text"><a href="https://server.ethicalads.io/proxy/click/1831/e0f7eb0e-990a-4236-a8d9-68567c0112ea/" rel="nofollow noopener" target="_blank"><strong>DigitalOcean App Platform </strong><span>ship your code to production in just a few clicks.</span><strong> Try now with $100 credit.</strong></a></div></div><div class="ea-callout"><a rel="nofollow noopener" target="_blank" href="https://ethicalads.io/?ref=ea-text">Ad by EthicalAds</a></div></div><img src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/a.svg" class="ea-pixel"><img src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/a_002.svg" class="ea-pixel"></div>
    </div>
    </aside>



<article class="article">

  <header class="article__header">
    <h1>Create one executable file for a Flask app with PyInstaller</h1>
    
<div class="article__subheader">

    <!-- Metadata -->
    <div class="article__metadata">
        <div class="article__metadata-item">
            <time datetime="2018-02-24 00:00:00-03:00"><b>24 Feb 2018</b></time>
        </div>
    
        <!-- Time to Read -->
            <div class="article__metadata-item">
                <b>9 min <span data-l10n-id="to-read">para leer</span></b>
            </div>
            
    </div>

</div>

<!-- Translations -->
<div class="article__translations">


    
</div>  </header>


  <section>
    <p><a class="gallery" href="https://elc.github.io/blog/images/flask_pyinstaller/flask-pyinstaller_headerimage.png"><img alt="Flask_pyinstaller_logo" class="b-lazy b-loaded" src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/flask-pyinstaller_headerimage.png" width="1401"></a></p>
<p><strong>EDIT 2019.05.03:</strong> The content order was change and the ideas were express more succinctly.</p>


<p>Having a single executable file could be a great advantage in so many
 cases and nowadays more a more desktop applications are using web 
technologies (React Native, Cordova, Ionic, etc.). It was time for the 
Python stack to join the Group via PyFlaDesk, a simple script to combine
 Flask, Qt and PyInstaller to create desktop Apps.</p>


<p>I wanted to create a single executable desktop application and since 
PyInstaller was there for a while I thought it would be pretty easy, it 
turns out that after after trying lots of solutions from Stack overflow,
 Quora and several blogs without success, I decided to post how I 
managed to solve the problem.</p>
<p>Note: A full list of the resources mentioned is <a href="#additional-resources">below</a></p>
<p>If you just want to read the solution, scroll down to the <a href="#solution">solution section</a></p>
<h2 id="the-problem"><a class="toclink" href="#the-problem">The Problem</a></h2>
<p>Well, Flask is a <strong>WEB</strong> framework (or Microframework as
 it desribes itself), used to create WEBsites that will be served by a 
WEB server and view from a WEB browser. Problems emerge when we try to 
replace 'WEB' with desktop in the previous sentence, we are trying to 
force something built for a particular scenario with its limitations to 
work in a completely different one.</p>
<h2 id="motivation"><a class="toclink" href="#motivation">Motivation</a></h2>
<p>Desktop applications aren't the most popular use for Python, those 
positions belongs to Web Development, DevOps and Data Science and, among
 the technologies used in the Web Development, Django and Flask are the 
most popular frameworks.</p>
<p>Using the tools one already knows for something completely different 
is a great advantage, in this case we want to create a desktop app with a
 single executable file from a web app built with Flask.</p>
<p>Some of the main advantages of the self-contained (also known as portable) software are:</p>
<ul>
<li>No virtual environment required.</li>
<li>Knowing which software is installed in the destination machine isn't necessary.</li>
<li>No installation required, just copy and paste or execute from removable drive.</li>
<li>Easier to tell the final user where is the program and how to execute it.</li>
<li>Harder (yet not impossible) to reverse engineer the software.</li>
</ul>
<p>There are some obvious disadvantages such as:</p>
<ul>
<li>Since all dependencies are included, files could get BIG (Hello World app in Flask is about 25MB).</li>
<li>No version control support for binaries.</li>
<li>If you consume self-contained software you have to <strong>trust</strong> your provider about its safety.</li>
<li>Working with external files, databases and other external sources has to be strongly tested.</li>
</ul>
<p>This are some points to consider, they could be advantages or disadvantages depending on the case:</p>
<ul>
<li>You treat the software as a black box.</li>
<li>When a new version is released you just replace the file and you're done.</li>
</ul>
<h2 id="flask-comes-into-the-action"><a class="toclink" href="#flask-comes-into-the-action">Flask comes into the action</a></h2>
<p>If you attempt to port a web app to a desktop one without changing 
the framework chances are you will use a lightweight framework like 
Flask. Now, how do you create a desktop app? Using a desktop framework 
(Qt, Tk, wx, etc), the most commonly used framework for this task is Qt.
 The idea is to create a minimal web browser capable of rendering HTML 
and then, execute the flask application server and browse to the url of 
the server inside this browser.</p>
<p>But what are the differences between creating a web browser and using
 the systems default? Well, first of all, you assume there will be one, 
and that that one would be able to render all the HTML, CSS and JS you 
are using, that could not be the case. More often than not we found 
ourselves developing software for old operating systems (aka Windows XP o
 older).</p>
<p>Sounds easy and actually it can be done, I was contributing to a script to achieve this very goal <a href="https://elc.github.io/link/pyfladesk_repo" target="_blank">PyFladesk</a>. There are some concerns about which version of Qt is the appropriate and the convenience of one over the other.</p>
<p><strong>Note:</strong> If all you use is Flask for served static or pseudo static content you could tried <a href="http://pythonhosted.org/Frozen-Flask/" target="_blank">Frozen Flask</a>.</p>
<h2 id="solution"><a class="toclink" href="#solution">Solution</a></h2>
<p>After reading all the previous posts and some of the <a href="https://pythonhosted.org/PyInstaller/" target="_blank">PyInstaller docs</a>.
 I found that some people actually solved it! But, the solution they 
propose was editing the spec file, which is generated after a first run 
of PyInstaller. I thought that solution was a hack and not the proper 
way to achieve what I wanted.</p>
<p>So I tried to understand what the changes in the spec file did and it
 turned out that that changes was to copy the folders Flask uses into 
the file directory/file (Actually one of the proposed solutions was 
build and then copy paste the folders, but besides being unpractical it 
wouldn't work with one file builds). After a little reasearch, I came 
across the command line arguments to achieve the same.</p>
<p>Windows:</p>
<div class="highlight "><pre><span></span><code>pyinstaller -w -F --add-data "templates;templates" --add-data "static;static" app.py
</code></pre></div>

<p>Linux (NOT TESTED):</p>
<div class="highlight "><pre><span></span><code>pyinstaller -w -F --add-data "templates:templates" --add-data "static:static" app.py
</code></pre></div>

<p>This will create a folder <code>dist</code> with our executable ready to be shipped. The executable will open the main window of our app.</p>
<p>It first started as a contribution for the <a href="https://elc.github.io/link/pyfladesk_repo" target="_blank">PyFladesk</a>
 project and then, I realize that since Qt is quite big, our executable 
were big too. The example app of that repository is 70 MB (much of which
 was the Qt Component for displaying HTML (WebEngine)). This is 
reasonable taking into account that we were shipping a self contain web 
browser.</p>
<p>There is no simple solution to the size problem but some suggestions are proposed in a <a href="#the-size-problem">following section</a>.</p>
<h2 id="tutorial"><a class="toclink" href="#tutorial">Tutorial</a></h2>
<p>If you haven't already, install it with pip (if you use virtual environments you should install it inside it)</p>
<div class="highlight "><pre><span></span><code>pip install pyinstaller
</code></pre></div>

<p>Some parameters to consider:</p>
<ul>
<li><code>F</code> - Bundles everything in a single file</li>
<li><code>w</code> - Avoid displaying a console</li>
<li><code>--add-data</code> - Add Folders to the directory/executable</li>
</ul>
<p>Since Flask relies on a directory structure you should pass it to the folder, in the example case we only have two folders: <code>templates</code> and <code>static</code>, in case you use a database or some other directory structure you may adapt this.</p>
<p>Note: For more complex scenarios check the <a href="https://pythonhosted.org/PyInstaller/usage.html" target="_blank">PyInstaller Docs</a></p>
<h2 id="the-size-problem"><a class="toclink" href="#the-size-problem">The Size Problem</a></h2>
<p>Is the project using as few dependencies as possible? If yes, 
continue reading, if not check and then come back. Make sure you create a
 virtual environment for your project and execute PyInstaller from 
there, if the size is still big, I recommend you to check one of these:</p>
<ul>
<li>Use Virtual Environments and install everything you need there, including PyInstaller (but nothing more!)</li>
<li>Check if all your dependences are really necessary, try to use the standard library when possible</li>
<li>Check if your biggest dependencies could be replaced with lightweight alternatives</li>
<li>Use one-dir option and then see what are the biggest dlls and if you can exclude them</li>
<li>Use the <a href="http://pyinstaller.readthedocs.io/en/stable/advanced-topics.html#using-pyi-archive-viewer" target="_blank">ArchiveViewer.py script</a> that's part of PyInstaller and exclude everything you don't need</li>
</ul>
<h2 id="conclusion"><a class="toclink" href="#conclusion">Conclusion</a></h2>
<p>Using PyInstaller and Flask is not as hard as people may experience 
if you have the correct knowledge but it requires a bit of work to get a
 clean, lightweight file. However, it's possible to create executable 
with complex apps, with special directory structure, databases and so 
on, but don't expect that to be a tiny file.</p>
<h2 id="additional-resources"><a class="toclink" href="#additional-resources">Additional Resources</a></h2>
<p>The following are the pages where this topic was mentioned and I couldn't find a proper answer:</p>
<ul>
<li><a href="https://stackoverflow.com/questions/32149892/flask-application-built-using-pyinstaller-not-rendering-index-html" target="_blank">Flask application built using pyinstaller not rendering index.html - jinja2.exceptions.TemplateNotFound</a> (Stack Overflow)</li>
<li><a href="https://stackoverflow.com/questions/47832309/pyinstaller-on-flask-app-import-error" target="_blank">Pyinstaller on Flask app, import error</a> (Stack Overflow)</li>
<li><a href="https://stackoverflow.com/questions/47018930/using-pyinstaller-on-python-flask-application-to-create-executable" target="_blank">Using Pyinstaller on Python Flask Application to create Executable</a> (Stack Overflow)</li>
<li><a href="https://stackoverflow.com/questions/40191441/python-2-7-12-trying-to-build-an-executable-file-using-pyinstaller-i-keep-gett" target="_blank">Python 2.7.12, trying to build an executable file using pyinstaller. I keep getting the below error</a> (Stack Overflow)</li>
<li><a href="https://www.quora.com/Can-I-convert-a-Flask-application-into-an-executable-file-that-runs-on-Windows-like-an-exe-file" target="_blank">Can I convert a Flask application into an executable file that runs on Windows like an .exe file?</a> (Quora)</li>
<li><a href="https://www.reddit.com/r/Python/comments/21evjn/is_it_possible_to_deploydistribute_flask_as_an/" target="_blank">Is it possible to deploy/distribute Flask as an executable for desktop use?</a> (Reddit)</li>
<li><a href="http://mapopa.blogspot.com.ar/2013/10/flask-and-pyinstaller-notice.html" target="_blank">Flask and pyinstaller notice</a> (Personal Website)</li>
</ul>
  </section>


  <footer>

<!-- Previous And Next Articles -->
<section class="invisible">
    <h2 data-l10n-id="previous-next">No olvides consultar los artículos anteriores y siguientes</h2>
        <a class="article__button" href="https://elc.github.io/posts/haskell-pattern-matching-in-python">Haskell pattern matching in Python</a>
        <a class="article__button" href="https://elc.github.io/posts/fastai-colab-deep-learning">Configuring FastAI with Google Colab</a>
</section>

<!-- Share -->
<section>
    <h2 class="share-invitation"><span data-l10n-id="share-invitation">¿Te ha gustado este artículo? Compártelo!</span></h2>

    <div class="share">
        

        <a href="http://twitter.com/share?url=https%3A//elc.github.io/posts/executable-flask-pyinstaller&amp;text=%40ELCWeb%20wrote%20this%20interesting%20article%3A%20Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller" target="_blank" class="twitter-button" onclick="ga('send', 'event', 'Twitter Share', 'click', 'Twitter Share'); return true">
            <i class="fa fa-twitter"></i>
            Twitter
        </a>

        <a href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A//elc.github.io/posts/executable-flask-pyinstaller&amp;text=%40ELCWeb%20wrote%20this%20interesting%20article%3A%20Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller" target="_blank" class="linkedin-button" onclick="ga('send', 'event', 'LinkedIn Share', 'click', 'LinkedIn Share'); return true">
            <i class="fa fa-linkedin"></i>
            LinkedIn
        </a>
    </div>
</section>

<!-- Contribution -->
<section>
    <h2 class="share-invitation"><span data-l10n-id="colaboration-button">¿Encontraste un Bug? ¡Envía una PR!</span></h2>

    <div class="share">
        <a target="_blank" class="contribute-button" href="https://github.com/ELC/elc.github.io-content/edit/master/blog/2018-executable-flask-pyinstaller.md" onclick="ga('send', 'event', 'Contribution', 'click', 'Article Contribution'); return true" data-l10n-id="colaboration-button">¿Encontraste un Bug? ¡Envía una PR!</a>
    </div>
</section>


<!-- News Letter Subscription -->

<ul class="newsletter-container">
    <li>
        <input class="newsletter-check" type="radio" name="ac" id="a1">
        <label for="a1" class="newsletter-button" data-l10n-id="newsletter-button">Recibe un email cuando se publique un nuevo artículo ¡Suscribete al Newsletter!</label>
        <section class="newsletter-content">
            <h2>
                <span data-l10n-id="subscribe-options">Puedes suscribirte al newsletter a través de </span><strong> Feedly </strong>
                <span data-l10n-id="or">o</span><strong> Email</strong>:
            </h2>

            <div class="share">
                <a href="https://feedly.com/i/subscription/feed%2Fhttps%3A%2F%2Ffeeds.feedburner.com%2FELCWEB" target="blank" onclick="ga('send', 'event', 'Feedly Subscribe Button', 'click', 'Newsletter'); return true">
                    <img id="feedlyFollow" src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/feedly-follow-rectangle-flat-big_2x.png" alt="follow us in feedly" width="131" height="56">
                </a>

                <a class="newsletter-button" target="popupwindow" href="https://feedburner.google.com/fb/a/mailverify?uri=ELCWEB" onclick="window.open('https://feedburner.google.com/fb/a/mailverify?uri=ELCWEB', 'popupwindow', 'scrollbars=yes,width=550,height=450'); ga('send', 'event', 'Email Subscribe Button', 'click', 'Newsletter'); return true">
                    <i class="fa fa-envelope"></i>
                    Email
                </a>
            </div>
            
            <p>
                <span data-l10n-id="newsletter-feedburner">En caso de que utilices otro lector, consulta la lista completa en </span>
                <a href="http://feeds.feedburner.com/ELCWEB" target="_blank">FeedBurner Pages</a>
            </p>

        </section>
    </li>
</ul>

<!-- Related Posts -->
<section class="article-related">
    <h2 class="article-related-title" data-l10n-id="related-posts">Artículos relacionados:</h2>
        <article class="article-related-post">
                    <a class="article-related-post-link" href="https://elc.github.io/posts/streamlit-google-analytics" aria-label="Related Post">
                        <img alt="Related Article Header Image" class="b-lazy article-related-post-link-img" data-src="https://elc.github.io/blog/images/streamlit-google-analytics/streamlit-google-analytics_headerimage.png" src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/streamlit-google-analytics_headerimage-thumbnail.png">
                    </a>
          
            <div class="article-related-post-body">
                <h3 class="article-related-post-body-title"><a href="https://elc.github.io/posts/streamlit-google-analytics">Add Google Analytics (or any custom HTML) to Streamlit with Github Pages</a></h3>
                
                <p class="article-related-post-body-description">Streamlit
 is one of the most popular libraries for creating web apps using 
Python, and they also provide a service to freely host and share your 
apps. One of the issues with this free sharing capability is that one 
losses control over the app, for instance, it is no longer possible to 
control how the precise HTML will look like or add custom Open Graph or 
analytics. This post shows a simple and easy way to add all of this by 
using Github Pages.</p>
            </div>
        </article>
        <article class="article-related-post">
                    <a class="article-related-post-link" href="https://elc.github.io/posts/streamlit-lessons" aria-label="Related Post">
                        <img alt="Related Article Header Image" class="b-lazy article-related-post-link-img" data-src="https://elc.github.io/blog/images/streamlit-lessons/streamlit-lessons_headerimage.png" src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/streamlit-lessons_headerimage-thumbnail.png">
                    </a>
          
            <div class="article-related-post-body">
                <h3 class="article-related-post-body-title"><a href="https://elc.github.io/posts/streamlit-lessons">Lessons learnt After Developing Finance Web Tools with Streamlit and Altair (No HTML/CSS/JS)</a></h3>
                
                <p class="article-related-post-body-description">There 
are a lot of resources available online about personal finances, stocks,
 markets, cryptos, and many more economy-related topics. However the 
decisions one has to make should be informed in order to be good enough.
 This post covers the lessons learnt after developing similar tools 
using Streamlit and Altair. No HTML/CSS/JS were needed. This post will 
make the reader aware of some pros and cons of this libraries and also 
show an example app.</p>
            </div>
        </article>
        <article class="article-related-post">
                    <a class="article-related-post-link" href="https://elc.github.io/posts/streamlit-multipage" aria-label="Related Post">
                        <img alt="Related Article Header Image" class="b-lazy article-related-post-link-img" data-src="https://elc.github.io/blog/images/streamlit-mutipage/streamlit-mutipage_headerimage.png" src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/streamlit-mutipage_headerimage-thumbnail.png">
                    </a>
          
            <div class="article-related-post-body">
                <h3 class="article-related-post-body-title"><a href="https://elc.github.io/posts/streamlit-multipage">Multipage, State-Persistent Apps with Streamlit</a></h3>
                
                <p class="article-related-post-body-description">Converting
 a Python script to a web app has never been easier thanks to libraries 
such as Streamlit. This library allows to create simple and responsive 
web apps with minimal effort but there is one potential limitation: No 
multipage support. In this post, a potential solution to this problem is
 presented with examples and demos.</p>
            </div>
        </article>
</section>

    <!-- Comments -->

  <div class="utterances" style="height: 269px;">
    <iframe class="utterances-frame" title="Comments" scrolling="no" src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/utterances.htm" loading="lazy"></iframe>
  </div>
  <!-- <div id="disqus_thread"></div>
  <script>    
    var disqus_config = function () {
      this.page.url = 'https://elc.github.io/posts/executable-flask-pyinstaller';  
      this.page.identifier = 'executable-flask-pyinstaller';
      this.page.title = 'Create one executable file for a Flask app with PyInstaller';
    };
    
    (function() {
      var d = document, s = d.createElement('script');
      
      s.src = 'https://elcgweb.disqus.com/embed.js';
      
      s.setAttribute('data-timestamp', +new Date());
      (d.head || d.body).appendChild(s);
    })();
  </script>
  <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript> -->
  </footer>

</article>


<footer class="footer">
    <div class="footer-container">
        <ul class="footer-container__column">
                <li><a href="https://elc.github.io/about/" data-l10n-id="about">Sobre mí</a></li>
                <li><a href="https://elc.github.io/projects/" data-l10n-id="portfolio">Portfolio</a></li>
                <li><a href="https://elc.github.io/publications.html" data-l10n-id="publications">Publicaciones</a></li>
        </ul>
        <ul class="footer-container__column">
            <li><a href="https://elc.github.io/categories/" data-l10n-id="categories">Categorías</a></li>
            <li><a href="https://elc.github.io/tags/" data-l10n-id="tags">Etiquetas</a></li>
        </ul>
        <ul class="footer-container__column">
            <li><a href="https://elc.github.io/archives/" data-l10n-id="archives">Archivos</a></li>
 
                    <li><a href="https://elc.github.io/disclaimer.html" data-l10n-id="disclaimer">Disclaimer</a></li>
 
                    <li><a href="https://elc.github.io/donate.html" data-l10n-id="donate">Donate</a></li>
        </ul>
    </div>
    <div class="copyright">
        <span>© 2020 Ezequiel Leonardo Castaño</span>
        <span>  <a href="http://feeds.feedburner.com/ELCWEB">Atom feed <i class="fa fa-rss" aria-hidden="true"></i></a></span>
    </div>
</footer>
    <a href="#topbar" class="back-to-top" aria-label="Back to Top" style="transform: translateY(-100px);">
      <i class="fa fa-arrow-up"></i>
    </a>

    <script src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/scripts.js"></script>


<!-- Google Analytics -->
<script>
    window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
    ga('create', 'UA-71773079-3', 'auto');
    ga('send', 'pageview');
</script>
<script async="" src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/analytics.js"></script>


<script id="dsq-count-scr" src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/count.js" async=""></script>

<script>

  var options = {
    sourceAttribute: "src",
    showCloseButton: true
  };

  new LuminousGallery(document.querySelectorAll(".gallery"), options);
</script>

      <script>
        var omitAds = false;
        if (!omitAds){
          
          let dataType = "text";
          let cssClasses = [];
          let adPosition = "";
          let adOrientation = "";
          
          if (window.matchMedia("(min-width: 1500px)").matches) {
            dataType = "image"
              
            const position = ["fixed", "absolute"];
            const randomPosition = Math.floor(Math.random() * position.length);
            adPosition = position[randomPosition]
            cssClasses.push(`ethical-image--${adPosition}`)
            
            const orientations = ["left", "right"];
            const randomOrientation = Math.floor(Math.random() * orientations.length);
            adOrientation = orientations[randomOrientation]
            cssClasses.push(`ethical-image--${adOrientation}`)
              
            }
            
          let ethicalAd = document.querySelector('[data-ea-keywords]');
          
          ethicalAd.setAttribute("data-ea-publisher", "elcgithubio");
          ethicalAd.setAttribute("data-ea-type", dataType);
          ethicalAd.setAttribute("id", `${dataType}-${adPosition}-${adOrientation}`);
          ethicalAd.parentElement.classList.add(`ethical-${dataType}`)
          ethicalAd.parentElement.classList.add(...cssClasses)

        }
      </script>
      
      <script async="" src="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/ethicalads.js"></script>

  

<link rel="stylesheet" href="Create%20one%20executable%20file%20for%20a%20Flask%20app%20with%20PyInstaller%20Ezequiel%20Leonardo%20Casta%C3%B1o%20Personal%20Website_files/6af5d1a69f.css" media="all"></body></html>